-----------------------------------------------------------------------------------
css 프레임워크를 사용하면 개성이 부족해 질 수 있다..
오픈소스는 사람들이 많이 쓰는것들을 쓰는 것을 추천한다.

antd 프레임워크를 설치할 때 아이콘을 다른 라이브러리로 분리해둘 것을 확인할 수 있는데 이는 아이콘, 이미지 파일등은
용량을 많이 차지 하기때문이다. 즉 최적화를 위해 분리 한것.

내가 웹디자이너가 아니기 때문에 디자인에 시간을 너무 뺏길 우려가 있기 때문에 라이브러리를 사용하고 거기서 필요한 부분을 커스터마이징하는 방향이 효율적이다.
-----------------------------------------------------------------------------------



-----------------------------------------------------------------------------------
- ant design -
[공식 문서]: "We provide antd.js antd.css and antd.min.js antd.min.css under antd/dist in antd's npm package. You can also download these files directly from CDNJS,  or unpkg."

antd의 css까지 적용하기 위해서는 파일마다 
import 'andt/dist/antd.css' 를 입력해서 css파일까지 가져와야 antd의 컴포넌트들에 css까지 입힐 수있다.

* 여기서 추가적으로 알아야 할 점은 원래 js파일 내부에서 css파일을 import하는 것은 안되지만
  next.js를 설치할 때 next에는 웹팩과 css관련 loader가 포함되어 있는데(node_modules/next/package.json에서 확인가능)
  웹팩이 번들링 하는 과정에서 css가 js파일 내에서 import된것을 발견하면 <style>로 바꾼후 html에 적용시킨다.
  웹팩은 img파일 등 확장자 상관없이 파일들을 js에서 사용할 수 있게끔 해준다.(물론 항상 loader가 필요하다.)

파일마다 import 'andt/dist/antd.css'를 입력하는 것을 비효율 적이다.
pages폴더 내 컴포넌트들의 공통 파일인 _app.js에만 import 'andt/dist/antd.css'를 해주면 된다.(어차피 pages의 모든 컴포넌트에 적용되기 때문)
-----------------------------------------------------------------------------------



-----------------------------------------------------------------------------------
- _app.js -
pages의 컴포넌트들은 _app.js가 공통으로 적용된다.(_app.js에서 사용하는 컴포넌트의 이름은 아무이름이나 사용하면 된다.)
prop.Component에 pages의 각 컴포넌트들의 return이 들어가게 되는데 여기서 prop.Component를 <Component />로 return하면 된다.

* prop들은 PropTypes로 모두 점검하는 것을 권장. (사이트의 안정성을 위해)
-----------------------------------------------------------------------------------



-----------------------------------------------------------------------------------
- <head></head> -
컴포넌트를 만들면 document의 <body></body> 안에 들어가게된다. <head></head>부분을 수정하고 싶을땐 어떻게 해야할까?
next에는 head를 수정할 수 있게 <Head></Head>컴포넌트를 지원해준다. 그 안에 태그를 이용해서 작성하면된다.
모든 컴포넌트에서 공통적으로 적용될 head의 메타정보들은 _app.js에 입력해주면 된다.
-----------------------------------------------------------------------------------



-----------------------------------------------------------------------------------
- 반응형 그리드 -
antd에서는 반응형으로 서비스를 만들 수 있게 <Row />, <Col /> 컴포넌트를 지원해 준다.
* 프론트엔드 개발을 할때 반응형으로 한다면 모바일 -> 테블릿 -> 데스크탑 순서로 디자인하는것이 좋다.(반대로하면 감당하기 괴로워진다고 한다..)

[ant design 공식문서 grid]: https://ant.design/components/grid/ 참고
-----------------------------------------------------------------------------------

-----------------------------------------------------------------------------------
- <a></a> target='_blank' -
a 태그의 target='_blank'는 보안위험이 있다.
<a href="www.a.com" target='_blank' rel='noreferrer noopener'> </a>
rel='noreferrer noopener'를 함께 입력해야한다. 
-----------------------------------------------------------------------------------



-----------------------------------------------------------------------------------
antd <List />
antd의 List컴포넌트의 grid속성에 xs, sm, md등 환경에 따라 List.Item들이 몇 개 보여질지 정할 수 있다.
-----------------------------------------------------------------------------------



-----------------------------------------------------------------------------------
강의를 들을 때 에러를 해결하는 과정을 잘 파악해야한다.
  * 특정 에러는 반복적으로 난다.(그만한 이유가 있음. 쉽게 놓칠만하다거나..)
-----------------------------------------------------------------------------------



-----------------------------------------------------------------------------------
react는 virtual dom을 사용해서 state가 바뀌고 리렌더링이 될때 서로 비교를 한다.
이때 jsx에 inline css를 적용하기위해 객체를 사용하게 되면 리렌더링이 될 때 새로운 객체로 판단하고 그 부분도 리렌더링 해버린다.
({} !== {}이기 때문) 렌더링 시간이 길어진다 싶으면 inline css는 최소화 시키는게 좋다. styled component를 사용해도되고
emotion, 또는 useMemo를 사용해서 객체로 저장해 놓아도된다.

  * 컴포넌트의 return 부분이 통채로 virtual dom이 된다.
-----------------------------------------------------------------------------------



-----------------------------------------------------------------------------------
- custom hook -
동일한 형태의 hook이 반복적으로 나오면 hook을 커스터마이징해서 사용함으로서 불필요한 중복을 없앨 수 있다.