// 렉시컬 환경은 식별자와 식별자에 바인딩된 값, 그리고 상위 스코프에 대한 참조를 기록하는 자료구조로 실행 컨텍스를 구성하는 컴포넌트다.
// 호출 스택이 코드의 실행 순서를 관리한다면 렉시컬 환경은 스코프와 식별자를 관리한다.

// 렉시컬 환경은 키와 값을 갖는 형태의 스코프(환경 레코드를 말한다, 전역, 함수, 블록 스코프)를 생성하여 식별자를 키로 등록하고 식별자에 바인딩된 값을 관리한다.
// 즉, 렉시컬 환경은 스코프를 구분하여 식별자를 등록하고 관리하는 저장소 역할을 하는 렉시컬 스코프의 실체다.

// ? 실행 컨텍스트는 LexicalEnvironment 컴포넌트와 VariableEnvironment 컴포넌트로 구성된다. 편의를 위해 이 둘을 구분하지 않고 '렉시컬 환경'으로 통일하겠다.

// * 렉시컬 환경의 구성 컴포넌트는 환경 레코드(Environment Record)와 외부 렉시컬 환경에 대한 참조(Outer Lexical Environment Reference)로 나뉜다.
// * 1. 환경레코드 
//  스코프에 포함된 식별자를 등록하고 식별자에 바인딩된 값을 관리하는 저장소다. 환경 레코드는 소스코드의 타입에 따라 관리하는 내요에 차이가 있다.(전역 소스코드의 경우 환경 레코드가 둘로 나뉜다.)
// * 2. 외부 렉시컬 환경에 대한 참조
//  외부 렉시컬 환경에 대한 참조는 '상위 스코프'를 가리킨다. 이때 상위 스코프란 외부 렉시컬 환경, 즉 해당 실행 컨텍스트를 생성한 소스코드를 포함하는 상위 코드의 렉시컬 환경을 말한다.
//  외부 렉시컬 환경에 대한 참조를 통해 단방향 링크드 리스트인 스코프 체인을 귀현하다.